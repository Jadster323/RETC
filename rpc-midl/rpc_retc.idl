#if (__midl >= 501)
midl_pragma warning(disable: 2111)
#endif

import "oaidl.idl";

[
	uuid(5f4db48f-188e-4243-8570-5a9835640b95),
	version(2.5)
]

interface rpc_retc
{
	typedef GUID	RZEFFECTID;
	typedef GUID	RZDEVICEID;
	typedef LONG	RZRESULT;
	typedef unsigned __int32 efsize_t;

	// If you change the order in the below enum adjust the order of genericEffectType and effectSize in server/src/common/commonData.h
	typedef enum RETCDeviceType
	{
		KEYBOARD,
		MOUSE,
		HEADSET,
		MOUSEPAD,
		KEYPAD,
		SYSTEM,
		HEADSET_STAND,
		ALL,
		ESIZE, // If you get that as type its invalid, goes always last!
	} RETCDeviceType;

	typedef BOOL supportArray_t[ESIZE];
	typedef RZDEVICEID supportedDevices_t[ALL];

	typedef struct RETCClientConfig
	{
		supportArray_t supportedDeviceTypes;
		supportedDevices_t emulatedDeviceIDS;
	} RETCClientConfig;

	typedef [context_handle] void* CONTEXT_HANDLE;
	typedef [ptr] RETCClientConfig* CONFIG_PTR; 
	
	CONTEXT_HANDLE initialize([in] handle_t hBinding, [in, out] CONFIG_PTR config);

	RZRESULT playEffect(const RETCDeviceType deviceType, [in] const int type, [in, out, unique]RZEFFECTID *pEffectID, const efsize_t effectSize, [size_is(effectSize)] char effectData[*], CONTEXT_HANDLE hContext);

	RZRESULT setEffect([in] const RZEFFECTID effID, CONTEXT_HANDLE hContext);
	RZRESULT deleteEffect([in] const RZEFFECTID effID, CONTEXT_HANDLE hContext);

	void disconnect([in, out] CONTEXT_HANDLE* phContext);
}
